// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: chorus/chorus.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Storage_Provider int32

const (
	Storage_Other        Storage_Provider = 0
	Storage_Ceph         Storage_Provider = 1
	Storage_Minio        Storage_Provider = 2
	Storage_AWS          Storage_Provider = 3
	Storage_GCS          Storage_Provider = 4
	Storage_Alibaba      Storage_Provider = 5
	Storage_Cloudflare   Storage_Provider = 6
	Storage_DigitalOcean Storage_Provider = 7
)

// Enum value maps for Storage_Provider.
var (
	Storage_Provider_name = map[int32]string{
		0: "Other",
		1: "Ceph",
		2: "Minio",
		3: "AWS",
		4: "GCS",
		5: "Alibaba",
		6: "Cloudflare",
		7: "DigitalOcean",
	}
	Storage_Provider_value = map[string]int32{
		"Other":        0,
		"Ceph":         1,
		"Minio":        2,
		"AWS":          3,
		"GCS":          4,
		"Alibaba":      5,
		"Cloudflare":   6,
		"DigitalOcean": 7,
	}
)

func (x Storage_Provider) Enum() *Storage_Provider {
	p := new(Storage_Provider)
	*p = x
	return p
}

func (x Storage_Provider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Storage_Provider) Descriptor() protoreflect.EnumDescriptor {
	return file_chorus_chorus_proto_enumTypes[0].Descriptor()
}

func (Storage_Provider) Type() protoreflect.EnumType {
	return &file_chorus_chorus_proto_enumTypes[0]
}

func (x Storage_Provider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Storage_Provider.Descriptor instead.
func (Storage_Provider) EnumDescriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{1, 0}
}

type GetStoragesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storages []*Storage `protobuf:"bytes,1,rep,name=storages,proto3" json:"storages,omitempty"`
}

func (x *GetStoragesResponse) Reset() {
	*x = GetStoragesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoragesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoragesResponse) ProtoMessage() {}

func (x *GetStoragesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoragesResponse.ProtoReflect.Descriptor instead.
func (*GetStoragesResponse) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{0}
}

func (x *GetStoragesResponse) GetStorages() []*Storage {
	if x != nil {
		return x.Storages
	}
	return nil
}

type Storage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// some human-readable alias for storage config
	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsMain bool   `protobuf:"varint,2,opt,name=is_main,json=isMain,proto3" json:"is_main,omitempty"`
	// ex: s3.clyso.com
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// s3 storage provider <Ceph|Minio|AWS|Other>
	Provider Storage_Provider `protobuf:"varint,4,opt,name=provider,proto3,enum=chorus.Storage_Provider" json:"provider,omitempty"`
	// credentials: access key (public, aka username)
	Credentials []*Credential `protobuf:"bytes,5,rep,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *Storage) Reset() {
	*x = Storage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage) ProtoMessage() {}

func (x *Storage) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage.ProtoReflect.Descriptor instead.
func (*Storage) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{1}
}

func (x *Storage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Storage) GetIsMain() bool {
	if x != nil {
		return x.IsMain
	}
	return false
}

func (x *Storage) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Storage) GetProvider() Storage_Provider {
	if x != nil {
		return x.Provider
	}
	return Storage_Other
}

func (x *Storage) GetCredentials() []*Credential {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type Credential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias     string `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	AccessKey string `protobuf:"bytes,2,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	SecretKey string `protobuf:"bytes,3,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
}

func (x *Credential) Reset() {
	*x = Credential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

func (x *Credential) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{2}
}

func (x *Credential) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Credential) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *Credential) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

type GetProxyCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string        `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Credentials []*Credential `protobuf:"bytes,2,rep,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *GetProxyCredentialsResponse) Reset() {
	*x = GetProxyCredentialsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProxyCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProxyCredentialsResponse) ProtoMessage() {}

func (x *GetProxyCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProxyCredentialsResponse.ProtoReflect.Descriptor instead.
func (*GetProxyCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{3}
}

func (x *GetProxyCredentialsResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetProxyCredentialsResponse) GetCredentials() []*Credential {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type AddReplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User            string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	From            string   `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To              string   `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Buckets         []string `protobuf:"bytes,5,rep,name=buckets,proto3" json:"buckets,omitempty"`
	IsForAllBuckets bool     `protobuf:"varint,6,opt,name=is_for_all_buckets,json=isForAllBuckets,proto3" json:"is_for_all_buckets,omitempty"`
	AgentUrl        *string  `protobuf:"bytes,7,opt,name=agent_url,json=agentUrl,proto3,oneof" json:"agent_url,omitempty"`
}

func (x *AddReplicationRequest) Reset() {
	*x = AddReplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReplicationRequest) ProtoMessage() {}

func (x *AddReplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReplicationRequest.ProtoReflect.Descriptor instead.
func (*AddReplicationRequest) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{4}
}

func (x *AddReplicationRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *AddReplicationRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *AddReplicationRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *AddReplicationRequest) GetBuckets() []string {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *AddReplicationRequest) GetIsForAllBuckets() bool {
	if x != nil {
		return x.IsForAllBuckets
	}
	return false
}

func (x *AddReplicationRequest) GetAgentUrl() string {
	if x != nil && x.AgentUrl != nil {
		return *x.AgentUrl
	}
	return ""
}

type ListBucketsForReplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User           string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	From           string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To             string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	ShowReplicated bool   `protobuf:"varint,4,opt,name=show_replicated,json=showReplicated,proto3" json:"show_replicated,omitempty"`
}

func (x *ListBucketsForReplicationRequest) Reset() {
	*x = ListBucketsForReplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketsForReplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketsForReplicationRequest) ProtoMessage() {}

func (x *ListBucketsForReplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketsForReplicationRequest.ProtoReflect.Descriptor instead.
func (*ListBucketsForReplicationRequest) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{5}
}

func (x *ListBucketsForReplicationRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ListBucketsForReplicationRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ListBucketsForReplicationRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ListBucketsForReplicationRequest) GetShowReplicated() bool {
	if x != nil {
		return x.ShowReplicated
	}
	return false
}

type ListBucketsForReplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets           []string `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
	ReplicatedBuckets []string `protobuf:"bytes,2,rep,name=replicated_buckets,json=replicatedBuckets,proto3" json:"replicated_buckets,omitempty"`
}

func (x *ListBucketsForReplicationResponse) Reset() {
	*x = ListBucketsForReplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketsForReplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketsForReplicationResponse) ProtoMessage() {}

func (x *ListBucketsForReplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketsForReplicationResponse.ProtoReflect.Descriptor instead.
func (*ListBucketsForReplicationResponse) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{6}
}

func (x *ListBucketsForReplicationResponse) GetBuckets() []string {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *ListBucketsForReplicationResponse) GetReplicatedBuckets() []string {
	if x != nil {
		return x.ReplicatedBuckets
	}
	return nil
}

type ListReplicationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replications []*Replication `protobuf:"bytes,1,rep,name=replications,proto3" json:"replications,omitempty"`
}

func (x *ListReplicationsResponse) Reset() {
	*x = ListReplicationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReplicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReplicationsResponse) ProtoMessage() {}

func (x *ListReplicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReplicationsResponse.ProtoReflect.Descriptor instead.
func (*ListReplicationsResponse) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{7}
}

func (x *ListReplicationsResponse) GetReplications() []*Replication {
	if x != nil {
		return x.Replications
	}
	return nil
}

type Replication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User            string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Bucket          string                 `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	From            string                 `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To              string                 `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	IsPaused        bool                   `protobuf:"varint,6,opt,name=is_paused,json=isPaused,proto3" json:"is_paused,omitempty"`
	IsInitDone      bool                   `protobuf:"varint,7,opt,name=is_init_done,json=isInitDone,proto3" json:"is_init_done,omitempty"`
	InitObjListed   int64                  `protobuf:"varint,8,opt,name=init_obj_listed,json=initObjListed,proto3" json:"init_obj_listed,omitempty"`
	InitObjDone     int64                  `protobuf:"varint,9,opt,name=init_obj_done,json=initObjDone,proto3" json:"init_obj_done,omitempty"`
	InitBytesListed int64                  `protobuf:"varint,10,opt,name=init_bytes_listed,json=initBytesListed,proto3" json:"init_bytes_listed,omitempty"`
	InitBytesDone   int64                  `protobuf:"varint,11,opt,name=init_bytes_done,json=initBytesDone,proto3" json:"init_bytes_done,omitempty"`
	Events          int64                  `protobuf:"varint,12,opt,name=events,proto3" json:"events,omitempty"`
	EventsDone      int64                  `protobuf:"varint,13,opt,name=events_done,json=eventsDone,proto3" json:"events_done,omitempty"`
	LastEmittedAt   *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=last_emitted_at,json=lastEmittedAt,proto3" json:"last_emitted_at,omitempty"`
	LastProcessedAt *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=last_processed_at,json=lastProcessedAt,proto3" json:"last_processed_at,omitempty"`
	AgentUrl        *string                `protobuf:"bytes,16,opt,name=agent_url,json=agentUrl,proto3,oneof" json:"agent_url,omitempty"`
}

func (x *Replication) Reset() {
	*x = Replication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Replication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Replication) ProtoMessage() {}

func (x *Replication) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Replication.ProtoReflect.Descriptor instead.
func (*Replication) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{8}
}

func (x *Replication) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Replication) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *Replication) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Replication) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Replication) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Replication) GetIsPaused() bool {
	if x != nil {
		return x.IsPaused
	}
	return false
}

func (x *Replication) GetIsInitDone() bool {
	if x != nil {
		return x.IsInitDone
	}
	return false
}

func (x *Replication) GetInitObjListed() int64 {
	if x != nil {
		return x.InitObjListed
	}
	return 0
}

func (x *Replication) GetInitObjDone() int64 {
	if x != nil {
		return x.InitObjDone
	}
	return 0
}

func (x *Replication) GetInitBytesListed() int64 {
	if x != nil {
		return x.InitBytesListed
	}
	return 0
}

func (x *Replication) GetInitBytesDone() int64 {
	if x != nil {
		return x.InitBytesDone
	}
	return 0
}

func (x *Replication) GetEvents() int64 {
	if x != nil {
		return x.Events
	}
	return 0
}

func (x *Replication) GetEventsDone() int64 {
	if x != nil {
		return x.EventsDone
	}
	return 0
}

func (x *Replication) GetLastEmittedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEmittedAt
	}
	return nil
}

func (x *Replication) GetLastProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastProcessedAt
	}
	return nil
}

func (x *Replication) GetAgentUrl() string {
	if x != nil && x.AgentUrl != nil {
		return *x.AgentUrl
	}
	return ""
}

type ReplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User   string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	From   string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To     string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ReplicationRequest) Reset() {
	*x = ReplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationRequest) ProtoMessage() {}

func (x *ReplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationRequest.ProtoReflect.Descriptor instead.
func (*ReplicationRequest) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{9}
}

func (x *ReplicationRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ReplicationRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ReplicationRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ReplicationRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type ListUserReplicationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replications []*UserReplication `protobuf:"bytes,1,rep,name=replications,proto3" json:"replications,omitempty"`
}

func (x *ListUserReplicationsResponse) Reset() {
	*x = ListUserReplicationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserReplicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserReplicationsResponse) ProtoMessage() {}

func (x *ListUserReplicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserReplicationsResponse.ProtoReflect.Descriptor instead.
func (*ListUserReplicationsResponse) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{10}
}

func (x *ListUserReplicationsResponse) GetReplications() []*UserReplication {
	if x != nil {
		return x.Replications
	}
	return nil
}

type UserReplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	From string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To   string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *UserReplication) Reset() {
	*x = UserReplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReplication) ProtoMessage() {}

func (x *UserReplication) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReplication.ProtoReflect.Descriptor instead.
func (*UserReplication) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{11}
}

func (x *UserReplication) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *UserReplication) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *UserReplication) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type DeleteUserReplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User                     string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	From                     string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                       string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	DeleteBucketReplications bool   `protobuf:"varint,4,opt,name=delete_bucket_replications,json=deleteBucketReplications,proto3" json:"delete_bucket_replications,omitempty"`
}

func (x *DeleteUserReplicationRequest) Reset() {
	*x = DeleteUserReplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReplicationRequest) ProtoMessage() {}

func (x *DeleteUserReplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReplicationRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserReplicationRequest) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteUserReplicationRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DeleteUserReplicationRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *DeleteUserReplicationRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *DeleteUserReplicationRequest) GetDeleteBucketReplications() bool {
	if x != nil {
		return x.DeleteBucketReplications
	}
	return false
}

type CompareBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User   string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	From   string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To     string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	// set true to get list of matching files (match) in response
	ShowMatch bool `protobuf:"varint,5,opt,name=show_match,json=showMatch,proto3" json:"show_match,omitempty"`
}

func (x *CompareBucketRequest) Reset() {
	*x = CompareBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareBucketRequest) ProtoMessage() {}

func (x *CompareBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareBucketRequest.ProtoReflect.Descriptor instead.
func (*CompareBucketRequest) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{13}
}

func (x *CompareBucketRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CompareBucketRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *CompareBucketRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CompareBucketRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *CompareBucketRequest) GetShowMatch() bool {
	if x != nil {
		return x.ShowMatch
	}
	return false
}

type CompareBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// true if storage's buckets have the same content
	IsMatch bool `protobuf:"varint,1,opt,name=is_match,json=isMatch,proto3" json:"is_match,omitempty"`
	// list of missing files in 'from storage' bucket
	MissFrom []string `protobuf:"bytes,2,rep,name=miss_from,json=missFrom,proto3" json:"miss_from,omitempty"`
	// list of missing files in 'to storage' bucket
	MissTo []string `protobuf:"bytes,3,rep,name=miss_to,json=missTo,proto3" json:"miss_to,omitempty"`
	// list of files with different content
	Differ []string `protobuf:"bytes,4,rep,name=differ,proto3" json:"differ,omitempty"`
	// list of errors occurred during comparison
	Error []string `protobuf:"bytes,5,rep,name=error,proto3" json:"error,omitempty"`
	// list matched files in storages bucket.
	// will be empty if request parameter show_match set to false.
	Match []string `protobuf:"bytes,6,rep,name=match,proto3" json:"match,omitempty"`
}

func (x *CompareBucketResponse) Reset() {
	*x = CompareBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareBucketResponse) ProtoMessage() {}

func (x *CompareBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareBucketResponse.ProtoReflect.Descriptor instead.
func (*CompareBucketResponse) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{14}
}

func (x *CompareBucketResponse) GetIsMatch() bool {
	if x != nil {
		return x.IsMatch
	}
	return false
}

func (x *CompareBucketResponse) GetMissFrom() []string {
	if x != nil {
		return x.MissFrom
	}
	return nil
}

func (x *CompareBucketResponse) GetMissTo() []string {
	if x != nil {
		return x.MissTo
	}
	return nil
}

func (x *CompareBucketResponse) GetDiffer() []string {
	if x != nil {
		return x.Differ
	}
	return nil
}

func (x *CompareBucketResponse) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CompareBucketResponse) GetMatch() []string {
	if x != nil {
		return x.Match
	}
	return nil
}

type GetAgentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agents []*Agent `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
}

func (x *GetAgentsResponse) Reset() {
	*x = GetAgentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentsResponse) ProtoMessage() {}

func (x *GetAgentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentsResponse.ProtoReflect.Descriptor instead.
func (*GetAgentsResponse) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{15}
}

func (x *GetAgentsResponse) GetAgents() []*Agent {
	if x != nil {
		return x.Agents
	}
	return nil
}

type Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storage string `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
	Url     string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Agent) Reset() {
	*x = Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chorus_chorus_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_chorus_chorus_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_chorus_chorus_proto_rawDescGZIP(), []int{16}
}

func (x *Agent) GetStorage() string {
	if x != nil {
		return x.Storage
	}
	return ""
}

func (x *Agent) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_chorus_chorus_proto protoreflect.FileDescriptor

var file_chorus_chorus_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2f, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x22,
	0xa9, 0x02, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x6b,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x65, 0x70, 0x68, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x57,
	0x53, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x43, 0x53, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07,
	0x41, 0x6c, 0x69, 0x62, 0x61, 0x62, 0x61, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x66, 0x6c, 0x61, 0x72, 0x65, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x4f, 0x63, 0x65, 0x61, 0x6e, 0x10, 0x07, 0x22, 0x60, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x6d, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0xc6, 0x01, 0x0a,
	0x15, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x66,
	0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0x83, 0x01, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x68, 0x6f,
	0x77, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x6c, 0x0a, 0x21, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x53, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xec,
	0x04, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x69,
	0x74, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x49, 0x6e, 0x69, 0x74, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x69, 0x74,
	0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x4f, 0x62, 0x6a, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x64, 0x6f, 0x6e,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x4f, 0x62, 0x6a,
	0x44, 0x6f, 0x6e, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x69, 0x6e, 0x69, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x64,
	0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x6f, 0x6e,
	0x65, 0x12, 0x42, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6c, 0x61,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a,
	0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0x64, 0x0a,
	0x12, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x75, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x49, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x1c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x74, 0x6f, 0x12, 0x3c, 0x0a, 0x1a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x73, 0x68, 0x6f, 0x77, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x22, 0xac, 0x01, 0x0a, 0x15, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x73, 0x73, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x69, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x69, 0x73, 0x73, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x3a, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x33, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x32, 0x8c, 0x08, 0x0a, 0x06, 0x43,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a,
	0x19, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x46,
	0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x17,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x30, 0x01, 0x12, 0x46, 0x0a, 0x10, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x47, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e,
	0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0d, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19,
	0x2e, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6c, 0x79, 0x73, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x63,
	0x62, 0x2f, 0x63, 0x68, 0x6f, 0x72, 0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x68, 0x6f, 0x72, 0x75, 0x73, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chorus_chorus_proto_rawDescOnce sync.Once
	file_chorus_chorus_proto_rawDescData = file_chorus_chorus_proto_rawDesc
)

func file_chorus_chorus_proto_rawDescGZIP() []byte {
	file_chorus_chorus_proto_rawDescOnce.Do(func() {
		file_chorus_chorus_proto_rawDescData = protoimpl.X.CompressGZIP(file_chorus_chorus_proto_rawDescData)
	})
	return file_chorus_chorus_proto_rawDescData
}

var file_chorus_chorus_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chorus_chorus_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_chorus_chorus_proto_goTypes = []interface{}{
	(Storage_Provider)(0),                     // 0: chorus.Storage.Provider
	(*GetStoragesResponse)(nil),               // 1: chorus.GetStoragesResponse
	(*Storage)(nil),                           // 2: chorus.Storage
	(*Credential)(nil),                        // 3: chorus.Credential
	(*GetProxyCredentialsResponse)(nil),       // 4: chorus.GetProxyCredentialsResponse
	(*AddReplicationRequest)(nil),             // 5: chorus.AddReplicationRequest
	(*ListBucketsForReplicationRequest)(nil),  // 6: chorus.ListBucketsForReplicationRequest
	(*ListBucketsForReplicationResponse)(nil), // 7: chorus.ListBucketsForReplicationResponse
	(*ListReplicationsResponse)(nil),          // 8: chorus.ListReplicationsResponse
	(*Replication)(nil),                       // 9: chorus.Replication
	(*ReplicationRequest)(nil),                // 10: chorus.ReplicationRequest
	(*ListUserReplicationsResponse)(nil),      // 11: chorus.ListUserReplicationsResponse
	(*UserReplication)(nil),                   // 12: chorus.UserReplication
	(*DeleteUserReplicationRequest)(nil),      // 13: chorus.DeleteUserReplicationRequest
	(*CompareBucketRequest)(nil),              // 14: chorus.CompareBucketRequest
	(*CompareBucketResponse)(nil),             // 15: chorus.CompareBucketResponse
	(*GetAgentsResponse)(nil),                 // 16: chorus.GetAgentsResponse
	(*Agent)(nil),                             // 17: chorus.Agent
	(*timestamppb.Timestamp)(nil),             // 18: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                     // 19: google.protobuf.Empty
}
var file_chorus_chorus_proto_depIdxs = []int32{
	2,  // 0: chorus.GetStoragesResponse.storages:type_name -> chorus.Storage
	0,  // 1: chorus.Storage.provider:type_name -> chorus.Storage.Provider
	3,  // 2: chorus.Storage.credentials:type_name -> chorus.Credential
	3,  // 3: chorus.GetProxyCredentialsResponse.credentials:type_name -> chorus.Credential
	9,  // 4: chorus.ListReplicationsResponse.replications:type_name -> chorus.Replication
	18, // 5: chorus.Replication.created_at:type_name -> google.protobuf.Timestamp
	18, // 6: chorus.Replication.last_emitted_at:type_name -> google.protobuf.Timestamp
	18, // 7: chorus.Replication.last_processed_at:type_name -> google.protobuf.Timestamp
	12, // 8: chorus.ListUserReplicationsResponse.replications:type_name -> chorus.UserReplication
	17, // 9: chorus.GetAgentsResponse.agents:type_name -> chorus.Agent
	19, // 10: chorus.Chorus.GetStorages:input_type -> google.protobuf.Empty
	19, // 11: chorus.Chorus.GetProxyCredentials:input_type -> google.protobuf.Empty
	6,  // 12: chorus.Chorus.ListBucketsForReplication:input_type -> chorus.ListBucketsForReplicationRequest
	5,  // 13: chorus.Chorus.AddReplication:input_type -> chorus.AddReplicationRequest
	19, // 14: chorus.Chorus.ListReplications:input_type -> google.protobuf.Empty
	19, // 15: chorus.Chorus.ListUserReplications:input_type -> google.protobuf.Empty
	10, // 16: chorus.Chorus.StreamBucketReplication:input_type -> chorus.ReplicationRequest
	10, // 17: chorus.Chorus.PauseReplication:input_type -> chorus.ReplicationRequest
	10, // 18: chorus.Chorus.ResumeReplication:input_type -> chorus.ReplicationRequest
	10, // 19: chorus.Chorus.DeleteReplication:input_type -> chorus.ReplicationRequest
	13, // 20: chorus.Chorus.DeleteUserReplication:input_type -> chorus.DeleteUserReplicationRequest
	14, // 21: chorus.Chorus.CompareBucket:input_type -> chorus.CompareBucketRequest
	19, // 22: chorus.Chorus.GetAgents:input_type -> google.protobuf.Empty
	1,  // 23: chorus.Chorus.GetStorages:output_type -> chorus.GetStoragesResponse
	4,  // 24: chorus.Chorus.GetProxyCredentials:output_type -> chorus.GetProxyCredentialsResponse
	7,  // 25: chorus.Chorus.ListBucketsForReplication:output_type -> chorus.ListBucketsForReplicationResponse
	19, // 26: chorus.Chorus.AddReplication:output_type -> google.protobuf.Empty
	8,  // 27: chorus.Chorus.ListReplications:output_type -> chorus.ListReplicationsResponse
	11, // 28: chorus.Chorus.ListUserReplications:output_type -> chorus.ListUserReplicationsResponse
	9,  // 29: chorus.Chorus.StreamBucketReplication:output_type -> chorus.Replication
	19, // 30: chorus.Chorus.PauseReplication:output_type -> google.protobuf.Empty
	19, // 31: chorus.Chorus.ResumeReplication:output_type -> google.protobuf.Empty
	19, // 32: chorus.Chorus.DeleteReplication:output_type -> google.protobuf.Empty
	19, // 33: chorus.Chorus.DeleteUserReplication:output_type -> google.protobuf.Empty
	15, // 34: chorus.Chorus.CompareBucket:output_type -> chorus.CompareBucketResponse
	16, // 35: chorus.Chorus.GetAgents:output_type -> chorus.GetAgentsResponse
	23, // [23:36] is the sub-list for method output_type
	10, // [10:23] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_chorus_chorus_proto_init() }
func file_chorus_chorus_proto_init() {
	if File_chorus_chorus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chorus_chorus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoragesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Storage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProxyCredentialsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBucketsForReplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBucketsForReplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReplicationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Replication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserReplicationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserReplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chorus_chorus_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chorus_chorus_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_chorus_chorus_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chorus_chorus_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chorus_chorus_proto_goTypes,
		DependencyIndexes: file_chorus_chorus_proto_depIdxs,
		EnumInfos:         file_chorus_chorus_proto_enumTypes,
		MessageInfos:      file_chorus_chorus_proto_msgTypes,
	}.Build()
	File_chorus_chorus_proto = out.File
	file_chorus_chorus_proto_rawDesc = nil
	file_chorus_chorus_proto_goTypes = nil
	file_chorus_chorus_proto_depIdxs = nil
}
