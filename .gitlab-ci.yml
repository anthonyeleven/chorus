include:
  - local: .gitlab/jobs.gitlab-ci.yml

stages:
  - test
  - build

#go-test:
#  stage: test
#  image: golang:1.21
#  script:
#    - echo ${HARBOR_CHORUS_USERNAME}

harbor-build-proxy:
  extends: .jobs:docker-build-push
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    CUSTOM_DOCKERFILE: "Dockerfile.proxy"
    CUSTOM_IMAGE_NAME: "proxy"

harbor-build-worker:
  extends: .jobs:docker-build-push
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    CUSTOM_DOCKERFILE: "Dockerfile.worker"
    CUSTOM_IMAGE_NAME: "worker"

get-chart-version:
  stage: test
  image: mikefarah/yq
  script:
    - export CHART_VERSION=$(cat ./deploy/chorus/Chart.yaml | yq eval .version)
    - echo $CHART_VERSION
    - echo $CHART_VERSION > chart_version.txt
  artifacts:
    paths:
      - chart_version.txt
    expire_in: 1 hour

harbor-build-helm:
  stage: test
  image:
    name:  alpine/helm:3.13.2
  needs:
    - job: get-chart-version
      artifacts: true
#  rules:
#    - if: $CI_COMMIT_TAG
  before_script:
    - export CHART_VERSION=$(cat chart_version.txt)
    - echo $CHART_VERSION
  script:
    - helm registry login -u ${HARBOR_CHORUS_USERNAME} -p ${HARBOR_CHORUS_PASSWORD} ${HARBOR_HOST}
    - |
      APP_VERSION=${CI_COMMIT_SHORT_SHA}
      if [ ! -z "${CI_COMMIT_TAG}" ]; then
        APP_VERSION=${CI_COMMIT_TAG}
      fi
      helm package ./deploy/chorus --app-version=${APP_VERSION}
    - helm push ./chorus-${CHART_VERSION} oci://${HARBOR_HOST}/chorus

get-ui-version:
  stage: build
  only:
    - tags
  image:
    name: registry.gitlab.com/gitlab-ci-utils/curl-jq
  script:
    - |
      UI_VERSION=$(curl --header "PRIVATE-TOKEN: $READ_API_TOKEN" --url "${CI_API_V4_URL}/projects/244/repository/tags?order_by=version&sort=desc" | jq -r '.[0].name')
    - echo $UI_VERSION
    - echo $UI_VERSION > ui-version.txt
  artifacts:
    paths:
      - ui-version.txt
    expire_in: 1 hour


release-standalone:
  needs:
    - job: get-ui-version
      artifacts: true
  stage: build
  image:
    name: goreleaser/goreleaser
    entrypoint: ['']
  when: manual
  only:
    - tags
  variables:
    GIT_DEPTH: 0
    GITLAB_TOKEN: ${CI_JOB_TOKEN}
  before_script:
    - |
      UI_VERSION=$(cat ui-version.txt)
    - echo $UI_VERSION
    - export DOWNLOAD_URL="${CI_API_V4_URL}/projects/244/packages/generic/chorusui/${UI_VERSION}/chorusui.tar.gz"
    - echo $DOWNLOAD_URL
    - 'wget --header="JOB-TOKEN: $CI_JOB_TOKEN" "${DOWNLOAD_URL}"'
    - mkdir -p service/standalone/static
    - tar -xf chorusui.tar.gz  -C service/standalone/static
  script:
    - goreleaser release --clean


